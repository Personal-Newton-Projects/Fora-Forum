@using Components.Administration;
@using Components.User;
@using Components.Utilities;

@inject IUserManager UserManager

<div class="card">
    @if(CurrentUser != null)
    {
            <a class="text-decoration-none" href="/profile/@CurrentUser.Id">
        <img class="card-img-top" src="@CurrentUser.ImageUrl">
        <div class="card-body">
            <h6 class="card-title">@CurrentUser.Username</h6>
                @if(HasModalLoaded)
                {
                                    <UserRank Role="@CurrentUser.UserRole.Role.Role">

            </UserRank>
            <UserStatus User="@CurrentUser">

            </UserStatus>
                }


        </div>
    </a>
    }

</div>
@code {
    [Parameter]
    public UserModel CurrentUser { get; set; }

    bool HasModalLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        if(CurrentUser.UserRole == null)
        {
            var id = CurrentUser.Id;
            UserModel FullUserModel = await UserManager.GetById(id);

            CurrentUser = FullUserModel;
        }

        HasModalLoaded = true;
        StateHasChanged();

    }
}
