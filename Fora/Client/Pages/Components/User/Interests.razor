@inject IInterestManager InterestManager
@inject IUserManager UserManager
@inject ILoginManager LoginManager

<html class="html">

<body class="body">
    @if (IsOnline == true)
    {
        <div class="row" style="background-color:lightgray;">
            <table class="table m-2">
                <thead>
                    <tr>
                        <th>All Interests</th>
                        <th>Options</th>
                    </tr>
                </thead>
                <tbody>
                @if (CurrentUser.UserInterests != null)
                {
                    @foreach (var item in Intresse)
                    {
                        <tr>
                            <td>
                                @if (IsAdded(item))
                                {
                                    @item.Name <span style="color: blue">✔</span>
                                }
                                else
                                {
                                    @item.Name
                                }
                                @if (item.UserId != null)
                                {
                                    <span> -- Created By: @item.User.Username</span>
                                }
                            </td>
                            <td>
                                @if (IsAdded(item))
                                {
                                    <button @onclick="@(() => RemoveInterest(item))" class="btn btn-primary" style="background-color:red">Remove</button>
                                }
                                else
                                {
                                    <button type="submit" @onclick="@(() => AddInterest(item))" class="btn btn-primary" style="background-color:green">Add</button>
                                }
                            </td>
                        </tr>
                    }
                }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <h3 style="text-align: center">Page did not load, perhaps you are not logged in</h3>
    }

</body>
</html>
@code {

    [Parameter]
    public List<InterestModel>? Intresse { get; set; } = new();
    [Parameter]
    public List<PostUserInterestsModel> ChosenInterests { get; set; } = new List<PostUserInterestsModel>();
    [Parameter]
    public UserModel CurrentUser { get; set; }
    [Parameter]
    public CreateInterestsModel InterestToCreate { get; set; } = new();
    [Parameter]
    public bool IsOnline { get; set; } = new();
    
    protected override async Task OnInitializedAsync()
    {
        Intresse = await InterestManager.GetInterests();
        if (CurrentUser == null)
        {
            CurrentUser = await LoginManager.GetLoggedInUser();
        }
        if (CurrentUser.Username == CurrentUser.Username)
        {
            IsOnline = true;
        }
        foreach (UserInterestModel userInterest in CurrentUser.UserInterests)
        {
            ChosenInterests.Add(new PostUserInterestsModel()
            {
                InterestID = userInterest.InterestId,
                UserID = userInterest.UserId
            });
        }
        StateHasChanged();
    }

    public async Task AddInterest(InterestModel interest)
    {
        ChosenInterests.Add(new PostUserInterestsModel() { InterestID = interest.Id, UserID = CurrentUser.Id, });
        await SubmitInterest();
    }

    public async Task RemoveInterest(InterestModel interest)
    {
        ChosenInterests.Remove(ChosenInterests.Where(i => i.InterestID == interest.Id).FirstOrDefault());
        await SubmitInterest();
    }

    public async Task SubmitInterest()
    {
        foreach (var item in ChosenInterests)
        {
            Console.WriteLine(item.InterestID);
        }
        await UserManager.UpdateUserInterests(ChosenInterests, CurrentUser.Id);
        StateHasChanged();
    }

    bool IsAdded(InterestModel interest)
    {
        if (CurrentUser.UserInterests.SingleOrDefault(x => x.InterestId == interest.Id) != null)
        {
            return true;
        }
        return false;
    }
}