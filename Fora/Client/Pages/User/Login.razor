@page "/login"

@inject ILoginManager LoginManager
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<div class="container">
    <div class="row">
        <div class="col-md-2">
        </div>
        <div class="col-md-8">
            <h5>Log in</h5>
            @if(!String.IsNullOrEmpty(AlertBox))
            {
                <div class="alert alert-warning">@AlertBox</div>
            }

            <EditForm Model="LoginForm" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <InputText @bind-Value="LoginForm.Username" Placeholder="Username"></InputText>
                <InputText type="password" @bind-Value="LoginForm.Password" Placeholder="Password"></InputText>
                <button type="submit" class="btn btn-primary">Submit</button>
            </EditForm>
        </div>
        <div class="col-md-2">
        </div>
    </div>
</div>

@code {
    [Parameter]
    public LoginModel LoginForm { get; set; } = new();

    string AlertBox { get; set; } = String.Empty;

    public async Task HandleSubmit()
    {
        Console.WriteLine("Submitted");

        if(await LoginManager.LogInWithUser(LoginForm))
        {
            NavigationManager.NavigateTo(NavigationManager.BaseUri, forceLoad: true);
        }
        else
        {
            AlertBox = "User does not exist!";
            StateHasChanged();
        }
    }

}
