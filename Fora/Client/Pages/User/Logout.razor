@page "/logout"
@inject ILoginManager LoginManager
@inject NavigationManager NavigationManager



<div class="container">
    <div class="row">
        <div class="col-md-4">
        </div>
        <div class="col-md-4">
            @if (ShowConfirmation)
            {
                <div class="modal d-block" tabindex="-1">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Are you sure?</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    @onclick="@(() => Confirm(false))">
                                </button>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to log out?
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary" data-bs-dismiss="modal"
                                    @onclick="@(() => Confirm(true))">
                                    Yes
                                </button>
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"
                                    @onclick="@(() => Confirm(false))">
                                    No
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <h3>Logout</h3>
            <button class="btn btn-primary" @onclick="@(() => ShowModal(true))">Click here to log out</button>
        </div>
        <div class="col-md-4">
        </div>
    </div>
</div>



@code {

    public bool ShowConfirmation { get; set; } = false;

    async Task LogOut()
    {
        await LoginManager.StoreUser(String.Empty);
        NavigationManager.NavigateTo(NavigationManager.BaseUri, forceLoad: true);
    }

    async Task ShowModal(bool show)
    {
        ShowConfirmation = show;
        StateHasChanged();
    }

    async Task Confirm(bool confirmation)
    {
        if (confirmation == false)
        {
            ShowModal(false);
        }
        else
        {
            await LogOut();
        }
    }
}
