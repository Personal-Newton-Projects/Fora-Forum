@page "/forum/{InterestName}/post"

@inject ILoginManager LoginManager
@inject IInterestManager InterestManager
@inject IThreadManager ThreadManager

@if (HasPageLoaded == true)
{
    <EditForm Model="@ThreadtoCreate" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <InputText class="form-control" @bind-Value="@ThreadtoCreate.Name">

        </InputText>

        @foreach (MessageModel message in ThreadtoCreate.Messages)
        {
            <InputTextArea class="form-control" @bind-Value="@message.Message"></InputTextArea>
        }

        <button class="btn btn-success" type="submit">Create Thread</button>

    </EditForm>
}


@code {
    [Parameter]
    public string InterestName { get; set; }

    InterestModel Interest { get; set; }

    public bool HasPageLoaded { get; set; } = false;

    public ThreadModel ThreadtoCreate { get; set; } = new ThreadModel();

    protected override void OnInitialized()
    {
        ThreadtoCreate.Messages = new List<MessageModel>();
        ThreadtoCreate.Messages.Add(new MessageModel());
        ThreadtoCreate.Messages[0].Thread = ThreadtoCreate;

        HasPageLoaded = true;
        StateHasChanged();

    }

    async Task HandleSubmit()
    {

        var interestResult = await InterestManager.GetInterests();
        Interest = interestResult.Where(i => i.Name.ToLower() == InterestName.ToLower()).FirstOrDefault();


        if (await LoginManager.IsLoggedIn())
        {
            ThreadtoCreate.User = await LoginManager.GetLoggedInUser();

            ThreadtoCreate.Interest = Interest;

            ThreadtoCreate.Interest.UserInterests = null;
            ThreadtoCreate.Interest.User = null;
            ThreadtoCreate.User.Interests = null;
            ThreadtoCreate.User.Messages.Add(ThreadtoCreate.Messages[0]);
            ThreadtoCreate.User.Threads.Add(ThreadtoCreate);
            

            ThreadManager.PostThread(ThreadtoCreate);
        }
    }


}
