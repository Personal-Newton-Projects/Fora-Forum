@page "/forum/{InterestName}"

@inject IInterestManager InterestManager
@inject ILoginManager LoginManager

@if (HasPageLoaded == true)
{
    @if (Interest != null)
    {
        <h3>@Interest.Name Subforum</h3>
        if (CurrentUser != null)
        {
            <h4>Welcome @CurrentUser.Username</h4>
        }
        else
        {
            <h4>Create an account to contribute to the discussion</h4>
        }

        @if (Interest.Threads != null)
        {
            @foreach (ThreadModel thread in Interest.Threads)
            {
                <div class="border">
                    <h6>@thread.Name</h6>
                    <h6>@thread.Messages.Count</h6>
                </div>
            }
        }

        if (CurrentUser != null)
        {
            <div class="border">
                <a href="/forum/@InterestName/post">
                    <button class="btn btn-primary">Create Thread</button>
                </a>
            </div>
        }

    }
    else
    {
        <h1>Error, subforum not found!</h1>
        <button class="btn btn-primary" onclick="@Reload">Reload</button>
    }

}




@code {
    [Parameter]
    public string InterestName { get; set; }

    public UserModel? CurrentUser { get; set; }

    InterestModel? Interest;

    public bool HasPageLoaded { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        var interestResult = await InterestManager.GetInterests();
        Interest = interestResult.Where(i => i.Name.ToLower() == InterestName.ToLower()).FirstOrDefault();

        if (await LoginManager.IsLoggedIn())
        {
            CurrentUser = await LoginManager.GetLoggedInUser();
        }
        else
        {
            CurrentUser = null;
        }

        HasPageLoaded = true;
        StateHasChanged();
    }

    public void Reload()
    {
        StateHasChanged();
    }
}
